<!-- views/index.ejs -->

<!DOCTYPE html>
<html lang="en">

  <head>
    <% include ./partials/head %>
  </head>

  <body class="container">

    <header>
      <% include ./partials/header %>
    </header>
    <main>
      <div class="jumbotron">
        <h1>Purde Lab Stats</h1>
        <p>Welcome</p>
        <% console.log(debug); %>
        <ul>
          <% rooms.forEach((room) => { %>
          <!--List of all labs for that building
              Links to each room page
              Avaliablity [class in session, full, open] -->
          <li>
            <a href="/<%= room.abbrev %>/<%= room.room_number %>">
              <%= room.room_number %>
            </a>
          </li>
          <% }) %>
        </ul>

        <p>Type something in the input field to search the table</p>  
        <input class="form-control" id="myInput" type="text" placeholder="Search..">
        <br>

        <table class="table table-bordered" id="myTable">
          <thead>
            <tr>
              <th scope="col" onclick="sortTable(0)">Building</th>
              <th scope="col" onclick="sortTable(1)">Room</th>
              <th scope="col" onclick="sortTable(2)">Machine Name</th>
              <th scope="col" onclick="sortTable(3)">OS</th>
              <th scope="col" onclick="sortTable(4)">Availability</th>
              <th scope="col" onclick="sortTable(5)">Fraction</th>

              
              
            </tr>
          </thead>
          <tbody id="myTable2">
            
        
            <% rows.forEach((row) => { %>

              

                <tr>
                
                  <td><%= row.building %></td>
                  <td><%= row.room %></td>
                  <td><%= row.machineName %></td>
                  <td><%= row.OS %></td>
                  <td><%= row.Availability %></td>
                  <td><%= row.Fraction %></td>
                   
                </tr>

            <% }) %>

            
          </tbody>
        </table>

        <script>
        $(document).ready(function(){
          $("#myInput").on("keyup", function() {
            var value = $(this).val().toLowerCase();
            $("#myTable2 tr").filter(function() {
              $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
          });
        });

        function sortTable(n) {
          var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
          table = document.getElementById("myTable");
          switching = true;
          //Set the sorting direction to ascending:
          dir = "asc"; 
          /*Make a loop that will continue until
          no switching has been done:*/
          while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
              //start by saying there should be no switching:
              shouldSwitch = false;
              /*Get the two elements you want to compare,
              one from current row and one from the next:*/
              x = rows[i].getElementsByTagName("TD")[n];
              y = rows[i + 1].getElementsByTagName("TD")[n];
              /*check if the two rows should switch place,
              based on the direction, asc or desc:*/
              if (dir == "asc") {
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                  //if so, mark as a switch and break the loop:
                  shouldSwitch= true;
                  break;
                }
              } else if (dir == "desc") {
                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                  //if so, mark as a switch and break the loop:
                  shouldSwitch = true;
                  break;
                }
              }
            }
            if (shouldSwitch) {
              /*If a switch has been marked, make the switch
              and mark that a switch has been done:*/
              rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
              switching = true;
              //Each time a switch is done, increase this count by 1:
              switchcount ++;      
            } else {
              /*If no switching has been done AND the direction is "asc",
              set the direction to "desc" and run the while loop again.*/
              if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
              }
            }
          }
        }

        </script>



      </div>
    </main>


    <footer>
      <% include ./partials/footer %>
    </footer>

  </body>

</html>
